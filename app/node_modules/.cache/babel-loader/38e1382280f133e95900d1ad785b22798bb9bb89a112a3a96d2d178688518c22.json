{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst Parser = require(\"../Parser\");\nconst WebpackError = require(\"../WebpackError\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\n// https://www.w3.org/TR/css-syntax-3/#newline\n// We don't have `preprocessing` stage, so we need specify all of them\nconst STRING_MULTILINE = /\\\\[\\n\\r\\f]/g;\n// https://www.w3.org/TR/css-syntax-3/#whitespace\nconst TRIM_WHITE_SPACES = /(^[ \\t\\n\\r\\f]*|[ \\t\\n\\r\\f]*$)/g;\nconst UNESCAPE = /\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g;\nconst IMAGE_SET_FUNCTION = /^(-\\w+-)?image-set$/i;\nconst OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE = /^@(-\\w+-)?keyframes$/;\nconst OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY = /^(-\\w+-)?animation(-name)?$/i;\n\n/**\n * @param {string} str url string\n * @param {boolean} isString is url wrapped in quotes\n * @returns {string} normalized url\n */\nconst normalizeUrl = (str, isString) => {\n  // Remove extra spaces and newlines:\n  // `url(\"im\\\n  // g.png\")`\n  if (isString) {\n    str = str.replace(STRING_MULTILINE, \"\");\n  }\n  str = str\n  // Remove unnecessary spaces from `url(\"   img.png\t \")`\n  .replace(TRIM_WHITE_SPACES, \"\")\n  // Unescape\n  .replace(UNESCAPE, match => {\n    if (match.length > 2) {\n      return String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n    } else {\n      return match[1];\n    }\n  });\n  if (/^data:/i.test(str)) {\n    return str;\n  }\n  if (str.includes(\"%\")) {\n    // Convert `url('%2E/img.png')` -> `url('./img.png')`\n    try {\n      str = decodeURIComponent(str);\n    } catch (error) {\n      // Ignore\n    }\n  }\n  return str;\n};\nclass LocConverter {\n  /**\n   * @param {string} input input\n   */\n  constructor(input) {\n    this._input = input;\n    this.line = 1;\n    this.column = 0;\n    this.pos = 0;\n  }\n\n  /**\n   * @param {number} pos position\n   * @returns {LocConverter} location converter\n   */\n  get(pos) {\n    if (this.pos !== pos) {\n      if (this.pos < pos) {\n        const str = this._input.slice(this.pos, pos);\n        let i = str.lastIndexOf(\"\\n\");\n        if (i === -1) {\n          this.column += str.length;\n        } else {\n          this.column = str.length - i - 1;\n          this.line++;\n          while (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1) this.line++;\n        }\n      } else {\n        let i = this._input.lastIndexOf(\"\\n\", this.pos);\n        while (i >= pos) {\n          this.line--;\n          i = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n        }\n        this.column = pos - i;\n      }\n      this.pos = pos;\n    }\n    return this;\n  }\n}\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_RULE = 1;\nconst CSS_MODE_IN_LOCAL_RULE = 2;\nconst CSS_MODE_AT_IMPORT_EXPECT_URL = 3;\nconst CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA = 4;\nconst CSS_MODE_AT_IMPORT_INVALID = 5;\nconst CSS_MODE_AT_NAMESPACE_INVALID = 6;\nclass CssParser extends Parser {\n  constructor() {\n    let {\n      allowPseudoBlocks = true,\n      allowModeSwitch = true,\n      defaultMode = \"global\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this.allowPseudoBlocks = allowPseudoBlocks;\n    this.allowModeSwitch = allowModeSwitch;\n    this.defaultMode = defaultMode;\n  }\n\n  /**\n   * @param {ParserState} state parser state\n   * @param {string} message warning message\n   * @param {LocConverter} locConverter location converter\n   * @param {number} start start offset\n   * @param {number} end end offset\n   */\n  _emitWarning(state, message, locConverter, start, end) {\n    const {\n      line: sl,\n      column: sc\n    } = locConverter.get(start);\n    const {\n      line: el,\n      column: ec\n    } = locConverter.get(end);\n    state.current.addWarning(new ModuleDependencyWarning(state.module, new WebpackError(message), {\n      start: {\n        line: sl,\n        column: sc\n      },\n      end: {\n        line: el,\n        column: ec\n      }\n    }));\n  }\n\n  /**\n   * @param {string | Buffer | PreparsedAst} source the source to parse\n   * @param {ParserState} state the parser state\n   * @returns {ParserState} the parser state\n   */\n  parse(source, state) {\n    if (Buffer.isBuffer(source)) {\n      source = source.toString(\"utf-8\");\n    } else if (typeof source === \"object\") {\n      throw new Error(\"webpackAst is unexpected for the CssParser\");\n    }\n    if (source[0] === \"\\ufeff\") {\n      source = source.slice(1);\n    }\n    const module = state.module;\n    const declaredCssVariables = new Set();\n    const locConverter = new LocConverter(source);\n    /** @type {number} */\n    let mode = CSS_MODE_TOP_LEVEL;\n    /** @type {number} */\n    let modeNestingLevel = 0;\n    /** @type {boolean} */\n    let allowImportAtRule = true;\n    let modeData = undefined;\n    /** @type {string | boolean | undefined} */\n    let singleClassSelector = undefined;\n    /** @type {[number, number] | undefined} */\n    let lastIdentifier = undefined;\n    /** @type {boolean} */\n    let awaitRightParenthesis = false;\n    /** @type [string, number, number][] */\n    let balanced = [];\n    const modeStack = [];\n    const isTopLevelLocal = () => modeData === \"local\" || this.defaultMode === \"local\" && modeData === undefined;\n    const eatUntil = chars => {\n      const charCodes = Array.from({\n        length: chars.length\n      }, (_, i) => chars.charCodeAt(i));\n      const arr = Array.from({\n        length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1\n      }, () => false);\n      charCodes.forEach(cc => arr[cc] = true);\n      return (input, pos) => {\n        for (;;) {\n          const cc = input.charCodeAt(pos);\n          if (cc < arr.length && arr[cc]) {\n            return pos;\n          }\n          pos++;\n          if (pos === input.length) return pos;\n        }\n      };\n    };\n    const eatText = (input, pos, eater) => {\n      let text = \"\";\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_SLASH) {\n          const newPos = walkCssTokens.eatComments(input, pos);\n          if (pos !== newPos) {\n            pos = newPos;\n            if (pos === input.length) break;\n          } else {\n            text += \"/\";\n            pos++;\n            if (pos === input.length) break;\n          }\n        }\n        const newPos = eater(input, pos);\n        if (pos !== newPos) {\n          text += input.slice(pos, newPos);\n          pos = newPos;\n        } else {\n          break;\n        }\n        if (pos === input.length) break;\n      }\n      return [pos, text.trimEnd()];\n    };\n    const eatExportName = eatUntil(\":};/\");\n    const eatExportValue = eatUntil(\"};/\");\n    const parseExports = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const cc = input.charCodeAt(pos);\n      if (cc !== CC_LEFT_CURLY) {\n        this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of ':export' (expected '{')`, locConverter, pos, pos);\n        return pos;\n      }\n      pos++;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let start = pos;\n        let name;\n        [pos, name] = eatText(input, pos, eatExportName);\n        if (pos === input.length) return pos;\n        if (input.charCodeAt(pos) !== CC_COLON) {\n          this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of export name in ':export' (expected ':')`, locConverter, start, pos);\n          return pos;\n        }\n        pos++;\n        if (pos === input.length) return pos;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let value;\n        [pos, value] = eatText(input, pos, eatExportValue);\n        if (pos === input.length) return pos;\n        const cc = input.charCodeAt(pos);\n        if (cc === CC_SEMICOLON) {\n          pos++;\n          if (pos === input.length) return pos;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n        } else if (cc !== CC_RIGHT_CURLY) {\n          this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of export value in ':export' (expected ';' or '}')`, locConverter, start, pos);\n          return pos;\n        }\n        const dep = new CssExportDependency(name, value);\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(start);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(pos);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n      pos++;\n      if (pos === input.length) return pos;\n      pos = walkCssTokens.eatWhiteLine(input, pos);\n      return pos;\n    };\n    const eatPropertyName = eatUntil(\":{};\");\n    const processLocalDeclaration = (input, pos) => {\n      modeData = undefined;\n      const start = pos;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const propertyNameStart = pos;\n      const [propertyNameEnd, propertyName] = eatText(input, pos, eatPropertyName);\n      if (input.charCodeAt(propertyNameEnd) !== CC_COLON) return start;\n      pos = propertyNameEnd + 1;\n      if (propertyName.startsWith(\"--\")) {\n        // CSS Variable\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(propertyNameStart);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(propertyNameEnd);\n        const name = propertyName.slice(2);\n        const dep = new CssLocalIdentifierDependency(name, [propertyNameStart, propertyNameEnd], \"--\");\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        declaredCssVariables.add(name);\n      } else if (OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY.test(propertyName)) {\n        modeData = \"animation\";\n        lastIdentifier = undefined;\n      }\n      return pos;\n    };\n    const processDeclarationValueDone = (input, pos) => {\n      if (modeData === \"animation\" && lastIdentifier) {\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(lastIdentifier[0]);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(lastIdentifier[1]);\n        const name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n        const dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n    };\n    const eatAtRuleNested = eatUntil(\"{};/\");\n    const eatKeyframes = eatUntil(\"{};/\");\n    const eatNameInVar = eatUntil(\",)};/\");\n    walkCssTokens(source, {\n      isSelector: () => {\n        return mode !== CSS_MODE_IN_RULE && mode !== CSS_MODE_IN_LOCAL_RULE && mode !== CSS_MODE_AT_IMPORT_EXPECT_URL && mode !== CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA && mode !== CSS_MODE_AT_IMPORT_INVALID && mode !== CSS_MODE_AT_NAMESPACE_INVALID;\n      },\n      url: (input, start, end, contentStart, contentEnd) => {\n        let value = normalizeUrl(input.slice(contentStart, contentEnd), false);\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              modeData.url = value;\n              modeData.lastPos = end;\n              mode = CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA;\n              break;\n            }\n          // Do not parse URLs in `supports(...)`\n          case CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA:\n            {\n              break;\n            }\n          // Do not parse URLs in import between rules\n          case CSS_MODE_AT_NAMESPACE_INVALID:\n          case CSS_MODE_AT_IMPORT_INVALID:\n            {\n              break;\n            }\n          default:\n            {\n              // Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n              if (value.length === 0) {\n                break;\n              }\n              const dep = new CssUrlDependency(value, [start, end], \"url\");\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              module.addCodeGenerationDependency(dep);\n              break;\n            }\n        }\n        return end;\n      },\n      string: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              modeData.url = normalizeUrl(input.slice(start + 1, end - 1), true);\n              modeData.lastPos = end;\n              const insideURLFunction = balanced[balanced.length - 1] && balanced[balanced.length - 1][0] === \"url\";\n              if (!insideURLFunction) {\n                mode = CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA;\n              }\n              break;\n            }\n          // Do not parse URLs in `supports(...)`\n          case CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA:\n            {\n              break;\n            }\n          default:\n            {\n              // TODO move escaped parsing to tokenizer\n              const last = balanced[balanced.length - 1];\n              if (last && (last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\" || IMAGE_SET_FUNCTION.test(last[0].replace(/\\\\/g, \"\")))) {\n                let value = normalizeUrl(input.slice(start + 1, end - 1), true);\n\n                // Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n                if (value.length === 0) {\n                  break;\n                }\n                const isUrl = last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\";\n                const dep = new CssUrlDependency(value, [start, end], isUrl ? \"string\" : \"url\");\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(start);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(end);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                module.addCodeGenerationDependency(dep);\n              }\n            }\n        }\n        return end;\n      },\n      atKeyword: (input, start, end) => {\n        const name = input.slice(start, end).toLowerCase();\n        if (name === \"@namespace\") {\n          mode = CSS_MODE_AT_NAMESPACE_INVALID;\n          this._emitWarning(state, \"@namespace is not supported in bundled CSS\", locConverter, start, end);\n          return end;\n        } else if (name === \"@import\") {\n          if (!allowImportAtRule) {\n            mode = CSS_MODE_AT_IMPORT_INVALID;\n            this._emitWarning(state, \"Any @import rules must precede all other rules\", locConverter, start, end);\n            return end;\n          }\n          mode = CSS_MODE_AT_IMPORT_EXPECT_URL;\n          modeData = {\n            atRuleStart: start,\n            lastPos: end,\n            url: undefined,\n            layer: undefined,\n            supports: undefined,\n            media: undefined\n          };\n        } else if (isTopLevelLocal() && OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE.test(name)) {\n          let pos = end;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n          const [newPos, name] = eatText(input, pos, eatKeyframes);\n          if (newPos === input.length) return newPos;\n          if (input.charCodeAt(newPos) !== CC_LEFT_CURLY) {\n            this._emitWarning(state, `Unexpected '${input[newPos]}' at ${newPos} during parsing of @keyframes (expected '{')`, locConverter, start, end);\n            return newPos;\n          }\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(pos);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(newPos);\n          const dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n          pos = newPos;\n          mode = CSS_MODE_IN_LOCAL_RULE;\n          modeNestingLevel = 1;\n          return pos + 1;\n        } else if (name === \"@media\" || name === \"@supports\") {\n          // TODO handle nested CSS syntax\n          let pos = end;\n          const [newPos] = eatText(input, pos, eatAtRuleNested);\n          pos = newPos;\n          if (pos === input.length) return pos;\n          if (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n            this._emitWarning(state, `Unexpected ${input[pos]} at ${pos} during parsing of @media or @supports (expected '{')`, locConverter, start, pos);\n            return pos;\n          }\n          return pos + 1;\n        }\n        return end;\n      },\n      semicolon: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              this._emitWarning(state, `Expected URL for @import at ${start}`, locConverter, start, end);\n              return end;\n            }\n          case CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA:\n            {\n              if (modeData.url === undefined) {\n                this._emitWarning(state, `Expected URL for @import at ${modeData.atRuleStart}`, locConverter, modeData.atRuleStart, modeData.lastPos);\n                return end;\n              }\n              const semicolonPos = end;\n              end = walkCssTokens.eatWhiteLine(input, end + 1);\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(modeData.atRuleStart);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              const pos = walkCssTokens.eatWhitespaceAndComments(input, modeData.lastPos);\n              // Prevent to consider comments as a part of media query\n              if (pos !== semicolonPos - 1) {\n                modeData.media = input.slice(modeData.lastPos, semicolonPos - 1).trim();\n              }\n              const dep = new CssImportDependency(modeData.url.trim(), [modeData.start, end], modeData.layer, modeData.supports, modeData.media && modeData.media.length > 0 ? modeData.media : undefined);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              modeData = undefined;\n              mode = CSS_MODE_TOP_LEVEL;\n              break;\n            }\n          case CSS_MODE_IN_LOCAL_RULE:\n            {\n              processDeclarationValueDone(input, start);\n              return processLocalDeclaration(input, end);\n            }\n          case CSS_MODE_IN_RULE:\n            {\n              return end;\n            }\n        }\n        mode = CSS_MODE_TOP_LEVEL;\n        modeData = undefined;\n        singleClassSelector = undefined;\n        return end;\n      },\n      leftCurlyBracket: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            allowImportAtRule = false;\n            mode = isTopLevelLocal() ? CSS_MODE_IN_LOCAL_RULE : CSS_MODE_IN_RULE;\n            modeNestingLevel = 1;\n            if (mode === CSS_MODE_IN_LOCAL_RULE) return processLocalDeclaration(input, end);\n            break;\n          case CSS_MODE_IN_RULE:\n          case CSS_MODE_IN_LOCAL_RULE:\n            modeNestingLevel++;\n            break;\n        }\n        return end;\n      },\n      rightCurlyBracket: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            processDeclarationValueDone(input, start);\n          /* falls through */\n          case CSS_MODE_IN_RULE:\n            if (--modeNestingLevel === 0) {\n              mode = CSS_MODE_TOP_LEVEL;\n              modeData = undefined;\n              singleClassSelector = undefined;\n            }\n            break;\n        }\n        return end;\n      },\n      id: (input, start, end) => {\n        singleClassSelector = false;\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            if (isTopLevelLocal()) {\n              const name = input.slice(start + 1, end);\n              const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n            }\n            break;\n        }\n        return end;\n      },\n      identifier: (input, start, end) => {\n        singleClassSelector = false;\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            if (modeData === \"animation\") {\n              lastIdentifier = [start, end];\n            }\n            break;\n          case CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA:\n            {\n              if (input.slice(start, end).toLowerCase() === \"layer\") {\n                modeData.layer = \"\";\n                modeData.lastPos = end;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      class: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              if (isTopLevelLocal()) {\n                const name = input.slice(start + 1, end);\n                const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(start);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(end);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                if (singleClassSelector === undefined) singleClassSelector = name;\n              } else {\n                singleClassSelector = false;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      function: (input, start, end) => {\n        let name = input.slice(start, end - 1);\n        balanced.push([name, start, end]);\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            {\n              name = name.toLowerCase();\n              if (name === \"var\") {\n                let pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n                if (pos === input.length) return pos;\n                const [newPos, name] = eatText(input, pos, eatNameInVar);\n                if (!name.startsWith(\"--\")) return end;\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(pos);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(newPos);\n                const dep = new CssSelfLocalIdentifierDependency(name.slice(2), [pos, newPos], \"--\", declaredCssVariables);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                return newPos;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      leftParenthesis: (input, start, end) => {\n        balanced.push([\"(\", start, end]);\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              modeStack.push(false);\n              break;\n            }\n        }\n        return end;\n      },\n      rightParenthesis: (input, start, end) => {\n        const last = balanced[balanced.length - 1];\n        balanced.pop();\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              if (awaitRightParenthesis) {\n                awaitRightParenthesis = false;\n              }\n              const newModeData = modeStack.pop();\n              if (newModeData !== false) {\n                modeData = newModeData;\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              }\n              break;\n            }\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              if (last && last[0] === \"url\") {\n                modeData.lastPos = end;\n                mode = CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA;\n              }\n              break;\n            }\n          case CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA:\n            {\n              if (last && last[0].toLowerCase() === \"layer\") {\n                modeData.layer = input.slice(last[2], end - 1).trim();\n                modeData.lastPos = end;\n              } else if (last && last[0].toLowerCase() === \"supports\") {\n                modeData.supports = input.slice(last[2], end - 1).trim();\n                modeData.lastPos = end;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      pseudoClass: (input, start, end) => {\n        singleClassSelector = false;\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              const name = input.slice(start, end).toLowerCase();\n              if (this.allowModeSwitch && name === \":global\") {\n                modeData = \"global\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowModeSwitch && name === \":local\") {\n                modeData = \"local\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowPseudoBlocks && name === \":export\") {\n                const pos = parseExports(input, end);\n                const dep = new ConstDependency(\"\", [start, pos]);\n                module.addPresentationalDependency(dep);\n                return pos;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      pseudoFunction: (input, start, end) => {\n        let name = input.slice(start, end - 1);\n        balanced.push([name, start, end]);\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              name = name.toLowerCase();\n              if (this.allowModeSwitch && name === \":global\") {\n                modeStack.push(modeData);\n                modeData = \"global\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowModeSwitch && name === \":local\") {\n                modeStack.push(modeData);\n                modeData = \"local\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else {\n                awaitRightParenthesis = true;\n                modeStack.push(false);\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      comma: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            if (!awaitRightParenthesis) {\n              modeData = undefined;\n              modeStack.length = 0;\n            }\n            break;\n          case CSS_MODE_IN_LOCAL_RULE:\n            processDeclarationValueDone(input, start);\n            break;\n        }\n        return end;\n      }\n    });\n    module.buildInfo.strict = true;\n    module.buildMeta.exportsType = \"namespace\";\n    module.addDependency(new StaticExportsDependency([], true));\n    return state;\n  }\n}\nmodule.exports = CssParser;","map":{"version":3,"names":["ModuleDependencyWarning","require","Parser","WebpackError","ConstDependency","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","walkCssTokens","CC_LEFT_CURLY","charCodeAt","CC_RIGHT_CURLY","CC_COLON","CC_SLASH","CC_SEMICOLON","STRING_MULTILINE","TRIM_WHITE_SPACES","UNESCAPE","IMAGE_SET_FUNCTION","OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE","OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY","normalizeUrl","str","isString","replace","match","length","String","fromCharCode","parseInt","slice","trim","test","includes","decodeURIComponent","error","LocConverter","constructor","input","_input","line","column","pos","get","i","lastIndexOf","CSS_MODE_TOP_LEVEL","CSS_MODE_IN_RULE","CSS_MODE_IN_LOCAL_RULE","CSS_MODE_AT_IMPORT_EXPECT_URL","CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA","CSS_MODE_AT_IMPORT_INVALID","CSS_MODE_AT_NAMESPACE_INVALID","CssParser","allowPseudoBlocks","allowModeSwitch","defaultMode","arguments","undefined","_emitWarning","state","message","locConverter","start","end","sl","sc","el","ec","current","addWarning","module","parse","source","Buffer","isBuffer","toString","Error","declaredCssVariables","Set","mode","modeNestingLevel","allowImportAtRule","modeData","singleClassSelector","lastIdentifier","awaitRightParenthesis","balanced","modeStack","isTopLevelLocal","eatUntil","chars","charCodes","Array","from","_","arr","reduce","a","b","Math","max","forEach","cc","eatText","eater","text","newPos","eatComments","trimEnd","eatExportName","eatExportValue","parseExports","eatWhitespaceAndComments","name","value","dep","setLoc","addDependency","eatWhiteLine","eatPropertyName","processLocalDeclaration","propertyNameStart","propertyNameEnd","propertyName","startsWith","add","processDeclarationValueDone","eatAtRuleNested","eatKeyframes","eatNameInVar","isSelector","url","contentStart","contentEnd","lastPos","addCodeGenerationDependency","string","insideURLFunction","last","toLowerCase","isUrl","atKeyword","atRuleStart","layer","supports","media","semicolon","semicolonPos","leftCurlyBracket","rightCurlyBracket","id","identifier","class","function","push","leftParenthesis","rightParenthesis","pop","newModeData","addPresentationalDependency","pseudoClass","pseudoFunction","comma","buildInfo","strict","buildMeta","exportsType","exports"],"sources":["/Users/kunjanthakkar/Documents/Code/loan-app/node_modules/webpack/lib/css/CssParser.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst Parser = require(\"../Parser\");\nconst WebpackError = require(\"../WebpackError\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\n// https://www.w3.org/TR/css-syntax-3/#newline\n// We don't have `preprocessing` stage, so we need specify all of them\nconst STRING_MULTILINE = /\\\\[\\n\\r\\f]/g;\n// https://www.w3.org/TR/css-syntax-3/#whitespace\nconst TRIM_WHITE_SPACES = /(^[ \\t\\n\\r\\f]*|[ \\t\\n\\r\\f]*$)/g;\nconst UNESCAPE = /\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g;\nconst IMAGE_SET_FUNCTION = /^(-\\w+-)?image-set$/i;\nconst OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE = /^@(-\\w+-)?keyframes$/;\nconst OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY =\n\t/^(-\\w+-)?animation(-name)?$/i;\n\n/**\n * @param {string} str url string\n * @param {boolean} isString is url wrapped in quotes\n * @returns {string} normalized url\n */\nconst normalizeUrl = (str, isString) => {\n\t// Remove extra spaces and newlines:\n\t// `url(\"im\\\n\t// g.png\")`\n\tif (isString) {\n\t\tstr = str.replace(STRING_MULTILINE, \"\");\n\t}\n\n\tstr = str\n\t\t// Remove unnecessary spaces from `url(\"   img.png\t \")`\n\t\t.replace(TRIM_WHITE_SPACES, \"\")\n\t\t// Unescape\n\t\t.replace(UNESCAPE, match => {\n\t\t\tif (match.length > 2) {\n\t\t\t\treturn String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n\t\t\t} else {\n\t\t\t\treturn match[1];\n\t\t\t}\n\t\t});\n\n\tif (/^data:/i.test(str)) {\n\t\treturn str;\n\t}\n\n\tif (str.includes(\"%\")) {\n\t\t// Convert `url('%2E/img.png')` -> `url('./img.png')`\n\t\ttry {\n\t\t\tstr = decodeURIComponent(str);\n\t\t} catch (error) {\n\t\t\t// Ignore\n\t\t}\n\t}\n\n\treturn str;\n};\n\nclass LocConverter {\n\t/**\n\t * @param {string} input input\n\t */\n\tconstructor(input) {\n\t\tthis._input = input;\n\t\tthis.line = 1;\n\t\tthis.column = 0;\n\t\tthis.pos = 0;\n\t}\n\n\t/**\n\t * @param {number} pos position\n\t * @returns {LocConverter} location converter\n\t */\n\tget(pos) {\n\t\tif (this.pos !== pos) {\n\t\t\tif (this.pos < pos) {\n\t\t\t\tconst str = this._input.slice(this.pos, pos);\n\t\t\t\tlet i = str.lastIndexOf(\"\\n\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tthis.column += str.length;\n\t\t\t\t} else {\n\t\t\t\t\tthis.column = str.length - i - 1;\n\t\t\t\t\tthis.line++;\n\t\t\t\t\twhile (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1)\n\t\t\t\t\t\tthis.line++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet i = this._input.lastIndexOf(\"\\n\", this.pos);\n\t\t\t\twhile (i >= pos) {\n\t\t\t\t\tthis.line--;\n\t\t\t\t\ti = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n\t\t\t\t}\n\t\t\t\tthis.column = pos - i;\n\t\t\t}\n\t\t\tthis.pos = pos;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_RULE = 1;\nconst CSS_MODE_IN_LOCAL_RULE = 2;\nconst CSS_MODE_AT_IMPORT_EXPECT_URL = 3;\nconst CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA = 4;\nconst CSS_MODE_AT_IMPORT_INVALID = 5;\nconst CSS_MODE_AT_NAMESPACE_INVALID = 6;\n\nclass CssParser extends Parser {\n\tconstructor({\n\t\tallowPseudoBlocks = true,\n\t\tallowModeSwitch = true,\n\t\tdefaultMode = \"global\"\n\t} = {}) {\n\t\tsuper();\n\t\tthis.allowPseudoBlocks = allowPseudoBlocks;\n\t\tthis.allowModeSwitch = allowModeSwitch;\n\t\tthis.defaultMode = defaultMode;\n\t}\n\n\t/**\n\t * @param {ParserState} state parser state\n\t * @param {string} message warning message\n\t * @param {LocConverter} locConverter location converter\n\t * @param {number} start start offset\n\t * @param {number} end end offset\n\t */\n\t_emitWarning(state, message, locConverter, start, end) {\n\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\tconst { line: el, column: ec } = locConverter.get(end);\n\n\t\tstate.current.addWarning(\n\t\t\tnew ModuleDependencyWarning(state.module, new WebpackError(message), {\n\t\t\t\tstart: { line: sl, column: sc },\n\t\t\t\tend: { line: el, column: ec }\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (Buffer.isBuffer(source)) {\n\t\t\tsource = source.toString(\"utf-8\");\n\t\t} else if (typeof source === \"object\") {\n\t\t\tthrow new Error(\"webpackAst is unexpected for the CssParser\");\n\t\t}\n\t\tif (source[0] === \"\\ufeff\") {\n\t\t\tsource = source.slice(1);\n\t\t}\n\n\t\tconst module = state.module;\n\n\t\tconst declaredCssVariables = new Set();\n\n\t\tconst locConverter = new LocConverter(source);\n\t\t/** @type {number} */\n\t\tlet mode = CSS_MODE_TOP_LEVEL;\n\t\t/** @type {number} */\n\t\tlet modeNestingLevel = 0;\n\t\t/** @type {boolean} */\n\t\tlet allowImportAtRule = true;\n\t\tlet modeData = undefined;\n\t\t/** @type {string | boolean | undefined} */\n\t\tlet singleClassSelector = undefined;\n\t\t/** @type {[number, number] | undefined} */\n\t\tlet lastIdentifier = undefined;\n\t\t/** @type {boolean} */\n\t\tlet awaitRightParenthesis = false;\n\t\t/** @type [string, number, number][] */\n\t\tlet balanced = [];\n\t\tconst modeStack = [];\n\n\t\tconst isTopLevelLocal = () =>\n\t\t\tmodeData === \"local\" ||\n\t\t\t(this.defaultMode === \"local\" && modeData === undefined);\n\t\tconst eatUntil = chars => {\n\t\t\tconst charCodes = Array.from({ length: chars.length }, (_, i) =>\n\t\t\t\tchars.charCodeAt(i)\n\t\t\t);\n\t\t\tconst arr = Array.from(\n\t\t\t\t{ length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1 },\n\t\t\t\t() => false\n\t\t\t);\n\t\t\tcharCodes.forEach(cc => (arr[cc] = true));\n\t\t\treturn (input, pos) => {\n\t\t\t\tfor (;;) {\n\t\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\t\tif (cc < arr.length && arr[cc]) {\n\t\t\t\t\t\treturn pos;\n\t\t\t\t\t}\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst eatText = (input, pos, eater) => {\n\t\t\tlet text = \"\";\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_SLASH) {\n\t\t\t\t\tconst newPos = walkCssTokens.eatComments(input, pos);\n\t\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\t\tpos = newPos;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += \"/\";\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst newPos = eater(input, pos);\n\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\ttext += input.slice(pos, newPos);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (pos === input.length) break;\n\t\t\t}\n\t\t\treturn [pos, text.trimEnd()];\n\t\t};\n\t\tconst eatExportName = eatUntil(\":};/\");\n\t\tconst eatExportValue = eatUntil(\"};/\");\n\t\tconst parseExports = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\tif (cc !== CC_LEFT_CURLY) {\n\t\t\t\tthis._emitWarning(\n\t\t\t\t\tstate,\n\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of ':export' (expected '{')`,\n\t\t\t\t\tlocConverter,\n\t\t\t\t\tpos,\n\t\t\t\t\tpos\n\t\t\t\t);\n\t\t\t\treturn pos;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet start = pos;\n\t\t\t\tlet name;\n\t\t\t\t[pos, name] = eatText(input, pos, eatExportName);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tif (input.charCodeAt(pos) !== CC_COLON) {\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of export name in ':export' (expected ':')`,\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tpos\n\t\t\t\t\t);\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet value;\n\t\t\t\t[pos, value] = eatText(input, pos, eatExportValue);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === CC_SEMICOLON) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t} else if (cc !== CC_RIGHT_CURLY) {\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of export value in ':export' (expected ';' or '}')`,\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tpos\n\t\t\t\t\t);\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\tconst dep = new CssExportDependency(name, value);\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(pos);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tpos = walkCssTokens.eatWhiteLine(input, pos);\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatPropertyName = eatUntil(\":{};\");\n\t\tconst processLocalDeclaration = (input, pos) => {\n\t\t\tmodeData = undefined;\n\t\t\tconst start = pos;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst propertyNameStart = pos;\n\t\t\tconst [propertyNameEnd, propertyName] = eatText(\n\t\t\t\tinput,\n\t\t\t\tpos,\n\t\t\t\teatPropertyName\n\t\t\t);\n\t\t\tif (input.charCodeAt(propertyNameEnd) !== CC_COLON) return start;\n\t\t\tpos = propertyNameEnd + 1;\n\t\t\tif (propertyName.startsWith(\"--\")) {\n\t\t\t\t// CSS Variable\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(propertyNameStart);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(propertyNameEnd);\n\t\t\t\tconst name = propertyName.slice(2);\n\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\tname,\n\t\t\t\t\t[propertyNameStart, propertyNameEnd],\n\t\t\t\t\t\"--\"\n\t\t\t\t);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t} else if (\n\t\t\t\tOPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY.test(propertyName)\n\t\t\t) {\n\t\t\t\tmodeData = \"animation\";\n\t\t\t\tlastIdentifier = undefined;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\tconst processDeclarationValueDone = (input, pos) => {\n\t\t\tif (modeData === \"animation\" && lastIdentifier) {\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(lastIdentifier[0]);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(lastIdentifier[1]);\n\t\t\t\tconst name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t};\n\t\tconst eatAtRuleNested = eatUntil(\"{};/\");\n\t\tconst eatKeyframes = eatUntil(\"{};/\");\n\t\tconst eatNameInVar = eatUntil(\",)};/\");\n\t\twalkCssTokens(source, {\n\t\t\tisSelector: () => {\n\t\t\t\treturn (\n\t\t\t\t\tmode !== CSS_MODE_IN_RULE &&\n\t\t\t\t\tmode !== CSS_MODE_IN_LOCAL_RULE &&\n\t\t\t\t\tmode !== CSS_MODE_AT_IMPORT_EXPECT_URL &&\n\t\t\t\t\tmode !== CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA &&\n\t\t\t\t\tmode !== CSS_MODE_AT_IMPORT_INVALID &&\n\t\t\t\t\tmode !== CSS_MODE_AT_NAMESPACE_INVALID\n\t\t\t\t);\n\t\t\t},\n\t\t\turl: (input, start, end, contentStart, contentEnd) => {\n\t\t\t\tlet value = normalizeUrl(input.slice(contentStart, contentEnd), false);\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tmodeData.url = value;\n\t\t\t\t\t\tmodeData.lastPos = end;\n\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// Do not parse URLs in `supports(...)`\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA: {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// Do not parse URLs in import between rules\n\t\t\t\t\tcase CSS_MODE_AT_NAMESPACE_INVALID:\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_INVALID: {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\t// Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n\t\t\t\t\t\tif (value.length === 0) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst dep = new CssUrlDependency(value, [start, end], \"url\");\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tstring: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tmodeData.url = normalizeUrl(input.slice(start + 1, end - 1), true);\n\t\t\t\t\t\tmodeData.lastPos = end;\n\t\t\t\t\t\tconst insideURLFunction =\n\t\t\t\t\t\t\tbalanced[balanced.length - 1] &&\n\t\t\t\t\t\t\tbalanced[balanced.length - 1][0] === \"url\";\n\n\t\t\t\t\t\tif (!insideURLFunction) {\n\t\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// Do not parse URLs in `supports(...)`\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA: {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\t// TODO move escaped parsing to tokenizer\n\t\t\t\t\t\tconst last = balanced[balanced.length - 1];\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlast &&\n\t\t\t\t\t\t\t(last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\" ||\n\t\t\t\t\t\t\t\tIMAGE_SET_FUNCTION.test(last[0].replace(/\\\\/g, \"\")))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlet value = normalizeUrl(input.slice(start + 1, end - 1), true);\n\n\t\t\t\t\t\t\t// Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n\t\t\t\t\t\t\tif (value.length === 0) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst isUrl = last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\";\n\t\t\t\t\t\t\tconst dep = new CssUrlDependency(\n\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t[start, end],\n\t\t\t\t\t\t\t\tisUrl ? \"string\" : \"url\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tatKeyword: (input, start, end) => {\n\t\t\t\tconst name = input.slice(start, end).toLowerCase();\n\t\t\t\tif (name === \"@namespace\") {\n\t\t\t\t\tmode = CSS_MODE_AT_NAMESPACE_INVALID;\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\"@namespace is not supported in bundled CSS\",\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tend\n\t\t\t\t\t);\n\t\t\t\t\treturn end;\n\t\t\t\t} else if (name === \"@import\") {\n\t\t\t\t\tif (!allowImportAtRule) {\n\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_INVALID;\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\"Any @import rules must precede all other rules\",\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\n\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_URL;\n\t\t\t\t\tmodeData = {\n\t\t\t\t\t\tatRuleStart: start,\n\t\t\t\t\t\tlastPos: end,\n\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t\tlayer: undefined,\n\t\t\t\t\t\tsupports: undefined,\n\t\t\t\t\t\tmedia: undefined\n\t\t\t\t\t};\n\t\t\t\t} else if (\n\t\t\t\t\tisTopLevelLocal() &&\n\t\t\t\t\tOPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE.test(name)\n\t\t\t\t) {\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatKeyframes);\n\t\t\t\t\tif (newPos === input.length) return newPos;\n\t\t\t\t\tif (input.charCodeAt(newPos) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t`Unexpected '${input[newPos]}' at ${newPos} during parsing of @keyframes (expected '{')`,\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn newPos;\n\t\t\t\t\t}\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t\tmode = CSS_MODE_IN_LOCAL_RULE;\n\t\t\t\t\tmodeNestingLevel = 1;\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t} else if (name === \"@media\" || name === \"@supports\") {\n\t\t\t\t\t// TODO handle nested CSS syntax\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tconst [newPos] = eatText(input, pos, eatAtRuleNested);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tif (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of @media or @supports (expected '{')`,\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn pos;\n\t\t\t\t\t}\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tsemicolon: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t`Expected URL for @import at ${start}`,\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA: {\n\t\t\t\t\t\tif (modeData.url === undefined) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`Expected URL for @import at ${modeData.atRuleStart}`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tmodeData.atRuleStart,\n\t\t\t\t\t\t\t\tmodeData.lastPos\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst semicolonPos = end;\n\t\t\t\t\t\tend = walkCssTokens.eatWhiteLine(input, end + 1);\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(\n\t\t\t\t\t\t\tmodeData.atRuleStart\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tconst pos = walkCssTokens.eatWhitespaceAndComments(\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\tmodeData.lastPos\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// Prevent to consider comments as a part of media query\n\t\t\t\t\t\tif (pos !== semicolonPos - 1) {\n\t\t\t\t\t\t\tmodeData.media = input\n\t\t\t\t\t\t\t\t.slice(modeData.lastPos, semicolonPos - 1)\n\t\t\t\t\t\t\t\t.trim();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dep = new CssImportDependency(\n\t\t\t\t\t\t\tmodeData.url.trim(),\n\t\t\t\t\t\t\t[modeData.start, end],\n\t\t\t\t\t\t\tmodeData.layer,\n\t\t\t\t\t\t\tmodeData.supports,\n\t\t\t\t\t\t\tmodeData.media && modeData.media.length > 0\n\t\t\t\t\t\t\t\t? modeData.media\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\tmode = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE: {\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t\treturn processLocalDeclaration(input, end);\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_RULE: {\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmode = CSS_MODE_TOP_LEVEL;\n\t\t\t\tmodeData = undefined;\n\t\t\t\tsingleClassSelector = undefined;\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tallowImportAtRule = false;\n\t\t\t\t\t\tmode = isTopLevelLocal()\n\t\t\t\t\t\t\t? CSS_MODE_IN_LOCAL_RULE\n\t\t\t\t\t\t\t: CSS_MODE_IN_RULE;\n\t\t\t\t\t\tmodeNestingLevel = 1;\n\t\t\t\t\t\tif (mode === CSS_MODE_IN_LOCAL_RULE)\n\t\t\t\t\t\t\treturn processLocalDeclaration(input, end);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CSS_MODE_IN_RULE:\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tmodeNestingLevel++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase CSS_MODE_IN_RULE:\n\t\t\t\t\t\tif (--modeNestingLevel === 0) {\n\t\t\t\t\t\t\tmode = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\t\tsingleClassSelector = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tid: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tif (isTopLevelLocal()) {\n\t\t\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\t\t\tstart + 1,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tidentifier: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tif (modeData === \"animation\") {\n\t\t\t\t\t\t\tlastIdentifier = [start, end];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA: {\n\t\t\t\t\t\tif (input.slice(start, end).toLowerCase() === \"layer\") {\n\t\t\t\t\t\t\tmodeData.layer = \"\";\n\t\t\t\t\t\t\tmodeData.lastPos = end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tclass: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tif (isTopLevelLocal()) {\n\t\t\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\t\t\tstart + 1,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\tif (singleClassSelector === undefined) singleClassSelector = name;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsingleClassSelector = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tfunction: (input, start, end) => {\n\t\t\t\tlet name = input.slice(start, end - 1);\n\n\t\t\t\tbalanced.push([name, start, end]);\n\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE: {\n\t\t\t\t\t\tname = name.toLowerCase();\n\n\t\t\t\t\t\tif (name === \"var\") {\n\t\t\t\t\t\t\tlet pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n\t\t\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatNameInVar);\n\t\t\t\t\t\t\tif (!name.startsWith(\"--\")) return end;\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(\n\t\t\t\t\t\t\t\tname.slice(2),\n\t\t\t\t\t\t\t\t[pos, newPos],\n\t\t\t\t\t\t\t\t\"--\",\n\t\t\t\t\t\t\t\tdeclaredCssVariables\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\treturn newPos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftParenthesis: (input, start, end) => {\n\t\t\t\tbalanced.push([\"(\", start, end]);\n\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tmodeStack.push(false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightParenthesis: (input, start, end) => {\n\t\t\t\tconst last = balanced[balanced.length - 1];\n\n\t\t\t\tbalanced.pop();\n\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tif (awaitRightParenthesis) {\n\t\t\t\t\t\t\tawaitRightParenthesis = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst newModeData = modeStack.pop();\n\t\t\t\t\t\tif (newModeData !== false) {\n\t\t\t\t\t\t\tmodeData = newModeData;\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tif (last && last[0] === \"url\") {\n\t\t\t\t\t\t\tmodeData.lastPos = end;\n\t\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_LAYER_OR_SUPPORTS_OR_MEDIA: {\n\t\t\t\t\t\tif (last && last[0].toLowerCase() === \"layer\") {\n\t\t\t\t\t\t\tmodeData.layer = input.slice(last[2], end - 1).trim();\n\t\t\t\t\t\t\tmodeData.lastPos = end;\n\t\t\t\t\t\t} else if (last && last[0].toLowerCase() === \"supports\") {\n\t\t\t\t\t\t\tmodeData.supports = input.slice(last[2], end - 1).trim();\n\t\t\t\t\t\t\tmodeData.lastPos = end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoClass: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tconst name = input.slice(start, end).toLowerCase();\n\t\t\t\t\t\tif (this.allowModeSwitch && name === \":global\") {\n\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowModeSwitch && name === \":local\") {\n\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowPseudoBlocks && name === \":export\") {\n\t\t\t\t\t\t\tconst pos = parseExports(input, end);\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, pos]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn pos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoFunction: (input, start, end) => {\n\t\t\t\tlet name = input.slice(start, end - 1);\n\n\t\t\t\tbalanced.push([name, start, end]);\n\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tname = name.toLowerCase();\n\n\t\t\t\t\t\tif (this.allowModeSwitch && name === \":global\") {\n\t\t\t\t\t\t\tmodeStack.push(modeData);\n\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowModeSwitch && name === \":local\") {\n\t\t\t\t\t\t\tmodeStack.push(modeData);\n\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tawaitRightParenthesis = true;\n\t\t\t\t\t\t\tmodeStack.push(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tcomma: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tif (!awaitRightParenthesis) {\n\t\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\t\tmodeStack.length = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t}\n\t\t});\n\n\t\tmodule.buildInfo.strict = true;\n\t\tmodule.buildMeta.exportsType = \"namespace\";\n\t\tmodule.addDependency(new StaticExportsDependency([], true));\n\t\treturn state;\n\t}\n}\n\nmodule.exports = CssParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}