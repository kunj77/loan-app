{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @TheLarkInn\n*/\n\n\"use strict\";\n\n/**\n * @type {Readonly<\"javascript/auto\">}\n */\nconst JAVASCRIPT_MODULE_TYPE_AUTO = \"javascript/auto\";\n\n/**\n * @type {Readonly<\"javascript/dynamic\">}\n */\nconst JAVASCRIPT_MODULE_TYPE_DYNAMIC = \"javascript/dynamic\";\n\n/**\n * @type {Readonly<\"javascript/esm\">}\n * This is the module type used for _strict_ ES Module syntax. This means that all legacy formats\n * that webpack supports (CommonJS, AMD, SystemJS) are not supported.\n */\nconst JAVASCRIPT_MODULE_TYPE_ESM = \"javascript/esm\";\n\n/**\n * @type {Readonly<\"json\">}\n * This is the module type used for JSON files. JSON files are always parsed as ES Module.\n */\nconst JSON_MODULE_TYPE = \"json\";\n\n/**\n * @type {Readonly<\"webassembly/async\">}\n * This is the module type used for WebAssembly modules. In webpack 5 they are always treated as async modules.\n *\n */\nconst WEBASSEMBLY_MODULE_TYPE_ASYNC = \"webassembly/async\";\n\n/**\n * @type {Readonly<\"webassembly/sync\">}\n * This is the module type used for WebAssembly modules. In webpack 4 they are always treated as sync modules.\n * There is a legacy option to support this usage in webpack 5 and up.\n */\nconst WEBASSEMBLY_MODULE_TYPE_SYNC = \"webassembly/sync\";\n\n/**\n * @type {Readonly<\"css\">}\n * This is the module type used for CSS files.\n */\nconst CSS_MODULE_TYPE = \"css\";\n\n/**\n * @type {Readonly<\"css/global\">}\n * This is the module type used for CSS modules files where you need to use `:local` in selector list to hash classes.\n */\nconst CSS_MODULE_TYPE_GLOBAL = \"css/global\";\n\n/**\n * @type {Readonly<\"css/module\">}\n * This is the module type used for CSS modules files, by default all classes are hashed.\n */\nconst CSS_MODULE_TYPE_MODULE = \"css/module\";\nexports.JAVASCRIPT_MODULE_TYPE_AUTO = JAVASCRIPT_MODULE_TYPE_AUTO;\nexports.JAVASCRIPT_MODULE_TYPE_DYNAMIC = JAVASCRIPT_MODULE_TYPE_DYNAMIC;\nexports.JAVASCRIPT_MODULE_TYPE_ESM = JAVASCRIPT_MODULE_TYPE_ESM;\nexports.JSON_MODULE_TYPE = JSON_MODULE_TYPE;\nexports.WEBASSEMBLY_MODULE_TYPE_ASYNC = WEBASSEMBLY_MODULE_TYPE_ASYNC;\nexports.WEBASSEMBLY_MODULE_TYPE_SYNC = WEBASSEMBLY_MODULE_TYPE_SYNC;\nexports.CSS_MODULE_TYPE = CSS_MODULE_TYPE;\nexports.CSS_MODULE_TYPE_GLOBAL = CSS_MODULE_TYPE_GLOBAL;\nexports.CSS_MODULE_TYPE_MODULE = CSS_MODULE_TYPE_MODULE;","map":{"version":3,"names":["JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_DYNAMIC","JAVASCRIPT_MODULE_TYPE_ESM","JSON_MODULE_TYPE","WEBASSEMBLY_MODULE_TYPE_ASYNC","WEBASSEMBLY_MODULE_TYPE_SYNC","CSS_MODULE_TYPE","CSS_MODULE_TYPE_GLOBAL","CSS_MODULE_TYPE_MODULE","exports"],"sources":["/Users/kunjanthakkar/Documents/Code/loan-app/node_modules/webpack/lib/ModuleTypeConstants.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @TheLarkInn\n*/\n\n\"use strict\";\n\n/**\n * @type {Readonly<\"javascript/auto\">}\n */\nconst JAVASCRIPT_MODULE_TYPE_AUTO = \"javascript/auto\";\n\n/**\n * @type {Readonly<\"javascript/dynamic\">}\n */\nconst JAVASCRIPT_MODULE_TYPE_DYNAMIC = \"javascript/dynamic\";\n\n/**\n * @type {Readonly<\"javascript/esm\">}\n * This is the module type used for _strict_ ES Module syntax. This means that all legacy formats\n * that webpack supports (CommonJS, AMD, SystemJS) are not supported.\n */\nconst JAVASCRIPT_MODULE_TYPE_ESM = \"javascript/esm\";\n\n/**\n * @type {Readonly<\"json\">}\n * This is the module type used for JSON files. JSON files are always parsed as ES Module.\n */\nconst JSON_MODULE_TYPE = \"json\";\n\n/**\n * @type {Readonly<\"webassembly/async\">}\n * This is the module type used for WebAssembly modules. In webpack 5 they are always treated as async modules.\n *\n */\nconst WEBASSEMBLY_MODULE_TYPE_ASYNC = \"webassembly/async\";\n\n/**\n * @type {Readonly<\"webassembly/sync\">}\n * This is the module type used for WebAssembly modules. In webpack 4 they are always treated as sync modules.\n * There is a legacy option to support this usage in webpack 5 and up.\n */\nconst WEBASSEMBLY_MODULE_TYPE_SYNC = \"webassembly/sync\";\n\n/**\n * @type {Readonly<\"css\">}\n * This is the module type used for CSS files.\n */\nconst CSS_MODULE_TYPE = \"css\";\n\n/**\n * @type {Readonly<\"css/global\">}\n * This is the module type used for CSS modules files where you need to use `:local` in selector list to hash classes.\n */\nconst CSS_MODULE_TYPE_GLOBAL = \"css/global\";\n\n/**\n * @type {Readonly<\"css/module\">}\n * This is the module type used for CSS modules files, by default all classes are hashed.\n */\nconst CSS_MODULE_TYPE_MODULE = \"css/module\";\n\nexports.JAVASCRIPT_MODULE_TYPE_AUTO = JAVASCRIPT_MODULE_TYPE_AUTO;\nexports.JAVASCRIPT_MODULE_TYPE_DYNAMIC = JAVASCRIPT_MODULE_TYPE_DYNAMIC;\nexports.JAVASCRIPT_MODULE_TYPE_ESM = JAVASCRIPT_MODULE_TYPE_ESM;\nexports.JSON_MODULE_TYPE = JSON_MODULE_TYPE;\nexports.WEBASSEMBLY_MODULE_TYPE_ASYNC = WEBASSEMBLY_MODULE_TYPE_ASYNC;\nexports.WEBASSEMBLY_MODULE_TYPE_SYNC = WEBASSEMBLY_MODULE_TYPE_SYNC;\nexports.CSS_MODULE_TYPE = CSS_MODULE_TYPE;\nexports.CSS_MODULE_TYPE_GLOBAL = CSS_MODULE_TYPE_GLOBAL;\nexports.CSS_MODULE_TYPE_MODULE = CSS_MODULE_TYPE_MODULE;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA,MAAMA,2BAA2B,GAAG,iBAAiB;;AAErD;AACA;AACA;AACA,MAAMC,8BAA8B,GAAG,oBAAoB;;AAE3D;AACA;AACA;AACA;AACA;AACA,MAAMC,0BAA0B,GAAG,gBAAgB;;AAEnD;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAG,MAAM;;AAE/B;AACA;AACA;AACA;AACA;AACA,MAAMC,6BAA6B,GAAG,mBAAmB;;AAEzD;AACA;AACA;AACA;AACA;AACA,MAAMC,4BAA4B,GAAG,kBAAkB;;AAEvD;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAG,KAAK;;AAE7B;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAG,YAAY;;AAE3C;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAG,YAAY;AAE3CC,OAAO,CAACT,2BAA2B,GAAGA,2BAA2B;AACjES,OAAO,CAACR,8BAA8B,GAAGA,8BAA8B;AACvEQ,OAAO,CAACP,0BAA0B,GAAGA,0BAA0B;AAC/DO,OAAO,CAACN,gBAAgB,GAAGA,gBAAgB;AAC3CM,OAAO,CAACL,6BAA6B,GAAGA,6BAA6B;AACrEK,OAAO,CAACJ,4BAA4B,GAAGA,4BAA4B;AACnEI,OAAO,CAACH,eAAe,GAAGA,eAAe;AACzCG,OAAO,CAACF,sBAAsB,GAAGA,sBAAsB;AACvDE,OAAO,CAACD,sBAAsB,GAAGA,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}