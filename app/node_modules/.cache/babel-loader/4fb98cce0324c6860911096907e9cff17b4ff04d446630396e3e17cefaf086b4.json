{"ast":null,"code":"var _jsxFileName = \"/Users/kunjanthakkar/Documents/Code/loan-app/src/components/LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport UserDataService from '../services/user';\nimport crypto from 'crypto-js';\nimport { loginUser } from '../store/userSlice';\nimport { useAppDispatch } from '../store/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [formError, setFormError] = useState('');\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const handleRegistration = userData => {\n    setFormError('');\n    setIsLoading(true);\n    const hashedPassword = crypto.SHA256(userData.password).toString();\n    UserDataService.login({\n      ...userData,\n      password: hashedPassword\n    }).then(response => {\n      dispatch(loginUser({\n        id: response.data.id\n      }));\n      setIsLoading(false);\n      navigate('/home');\n    }).catch(e => {\n      setIsLoading(false);\n      setFormError('Invalid email or password!');\n    });\n  };\n  const registerOptions = {\n    email: {\n      required: 'Email is required'\n    },\n    password: {\n      required: 'Password is required',\n      minLength: {\n        value: 8,\n        message: 'Password must have at least 8 characters'\n      }\n    }\n  };\n  const goToSignup = () => {\n    navigate('/signup');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Welcome to KMoneyLender!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), formError !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-msg\",\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleRegistration),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            ...register('email', registerOptions.email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-msg\",\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            ...register('password', registerOptions.password)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-msg\",\n            children: errors.password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signup-prompt\",\n          children: [\"New user? Sign up \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: goToSignup,\n            children: \"here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(LoginForm, \"Lpl9lGqH5xOp1kqzV2IKVqZNNYY=\", false, function () {\n  return [useForm, useNavigate, useAppDispatch];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useForm","useNavigate","UserDataService","crypto","loginUser","useAppDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","isLoading","setIsLoading","formError","setFormError","register","handleSubmit","formState","errors","mode","navigate","dispatch","handleRegistration","userData","hashedPassword","SHA256","password","toString","login","then","response","id","data","catch","e","registerOptions","email","required","minLength","value","message","goToSignup","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/kunjanthakkar/Documents/Code/loan-app/src/components/LoginForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport UserDataService from '../services/user';\nimport crypto from 'crypto-js';\nimport { loginUser } from '../store/userSlice';\nimport { useAppDispatch } from '../store/hooks';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport { LoginData } from '../typings';\nimport { LoadingSpinner } from './LoadingSpinner';\n\nconst LoginForm = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [formError, setFormError] = useState<string>('');\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginData>({ mode: 'onBlur' });\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const handleRegistration = (userData: LoginData) => {\n    setFormError('');\n    setIsLoading(true);\n    const hashedPassword = crypto.SHA256(userData.password).toString();\n\n    UserDataService.login({ ...userData, password: hashedPassword })\n      .then((response: AxiosResponse) => {\n        dispatch(loginUser({ id: response.data.id }));\n        setIsLoading(false);\n        navigate('/home');\n      })\n      .catch((e: AxiosError) => {\n        setIsLoading(false);\n        setFormError('Invalid email or password!');\n      });\n  };\n\n  const registerOptions = {\n    email: { required: 'Email is required' },\n    password: {\n      required: 'Password is required',\n      minLength: {\n        value: 8,\n        message: 'Password must have at least 8 characters',\n      },\n    },\n  };\n\n  const goToSignup = () => {\n    navigate('/signup');\n  };\n\n  return (\n    <>\n    {/* {isLoading && <LoadingSpinner />} */}\n    <div className=\"form-container\">\n      <h1 className=\"title\">Welcome to KMoneyLender!</h1>\n      {formError !== '' && <p className=\"error-msg\">{formError}</p>}\n      <form onSubmit={handleSubmit(handleRegistration)}>\n        <div>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            {...register('email', registerOptions.email)}\n          />\n          {errors.email && (\n            <p className=\"error-msg\">{errors.email.message}</p>\n          )}\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            {...register('password', registerOptions.password)}\n          />\n          {errors.password && (\n            <p className=\"error-msg\">{errors.password.message}</p>\n          )}\n        </div>\n        <button type=\"submit\">Login</button>\n        <p className=\"signup-prompt\">\n          New user? Sign up <span onClick={goToSignup}>here!</span>\n        </p>\n      </form>\n    </div>\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}